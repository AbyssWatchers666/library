<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.mapper.AdminMapper" >
  <resultMap id="BaseResultMap" type="com.qf.entity.Admin" >
    <id column="admin_id" property="adminId" jdbcType="INTEGER" />
    <result column="admin_name" property="adminName" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    admin_id, admin_name, phone, password, salt, role_id, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.entity.AdminExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_admins
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_admins
    where admin_id = #{adminId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_admins
    where admin_id = #{adminId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.entity.AdminExample" >
    delete from tbl_admins
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.entity.Admin" >
    insert into tbl_admins (admin_id, admin_name, phone, 
      password, salt, role_id, 
      is_delete)
    values (#{adminId,jdbcType=INTEGER}, #{adminName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.entity.Admin" >
    insert into tbl_admins
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        admin_id,
      </if>
      <if test="adminName != null" >
        admin_name,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="adminId != null" >
        #{adminId,jdbcType=INTEGER},
      </if>
      <if test="adminName != null" >
        #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.entity.AdminExample" resultType="java.lang.Integer" >
    select count(*) from tbl_admins
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tbl_admins
    <set >
      <if test="record.adminId != null" >
        admin_id = #{record.adminId,jdbcType=INTEGER},
      </if>
      <if test="record.adminName != null" >
        admin_name = #{record.adminName,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        salt = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tbl_admins
    set admin_id = #{record.adminId,jdbcType=INTEGER},
      admin_name = #{record.adminName,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      salt = #{record.salt,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.entity.Admin" >
    update tbl_admins
    <set >
      <if test="adminName != null" >
        admin_name = #{adminName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.entity.Admin" >
    update tbl_admins
    set admin_name = #{adminName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where admin_id = #{adminId,jdbcType=INTEGER}
  </update>

  <resultMap id="AdminVo" type="com.qf.entity.vo.AdminVo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="admin_id" jdbcType="INTEGER" property="adminId"/>
    <result column="admin_name" jdbcType="VARCHAR" property="adminName"/>
    <result column="phone" jdbcType="VARCHAR" property="phone"/>
    <result column="password" jdbcType="VARCHAR" property="password"/>
    <result column="salt" jdbcType="VARCHAR" property="salt"/>
    <association property="role" javaType="com.qf.entity.Roles">
      <id column="role_id" jdbcType="INTEGER" property="roleId"/>
      <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
      <result column="state" jdbcType="TINYINT" property="state"/>
      <result column="permissions_str" jdbcType="VARCHAR" property="permissionsStr"/>
    </association>
  </resultMap>

  <select id="selectAllVo" resultMap="AdminVo">
        select admin_id,admin_name,phone,r.role_id,r.role_name,r.state from tbl_admins a inner join tbl_roles r ON a.role_id =  r.role_id where a.is_delete = 1
    </select>

  <select id="selectByPrimaryKeyVo" resultMap="AdminVo" parameterType="java.lang.Integer">
        select admin_id,admin_name,phone,r.role_id,r.role_name,r.state from tbl_admins a inner join tbl_roles r ON a.role_id =  r.role_id where a.admin_id=#{adminId} and a.is_delete = 1
    </select>
</mapper>